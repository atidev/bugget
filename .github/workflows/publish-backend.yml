---
#-----------------------------------------------------------------------------------------
#
# –ü—É–±–ª–∏–∫–∞—Ü–∏—è bugget-api (backend)
#
#-----------------------------------------------------------------------------------------

name: publish-backend
description: "–°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è backend-–æ–±—Ä–∞–∑–∞ bugget-api –≤ Docker Hub"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "–í–µ—Ä—Å–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, v1.2.3)"
        required: true

jobs:
  backend:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Validate version format
        run: |
          VERSION="${{ github.event.inputs.version }}"

          # –†–∞–∑—Ä–µ—à–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç—ã —Ç–∏–ø–∞ v1.2.3 –∏ v1.2.3-suffix
          if [[ ! "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9._]+)?$ ]]; then
            echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç vX.Y.Z –∏–ª–∏ vX.Y.Z-suffix (–Ω–∞–ø—Ä–∏–º–µ—Ä, v1.2.3 –∏–ª–∏ v1.2.3-beta)"
            exit 1
          fi

          # –£—Å—Ç–∞–Ω–æ–≤–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é IS_PLAIN_VERSION, –µ—Å–ª–∏ –≤–µ—Ä—Å–∏—è –±–µ–∑ —Å—É—Ñ—Ñ–∏–∫—Å–∞
          if [[ "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "IS_PLAIN_VERSION=true" >> $GITHUB_ENV
          else
            echo "IS_PLAIN_VERSION=false" >> $GITHUB_ENV
          fi

      - name: Checkout
        uses: actions/checkout@master

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Set version
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Backend Multi-Arch
        run: |
          cd backend/bugget-api
          docker buildx create --name mybuilder --use --bootstrap || docker buildx use mybuilder
          docker buildx inspect mybuilder --bootstrap
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --cache-from=type=gha \
            --cache-to=type=gha,mode=max \
            -t ${{ secrets.DOCKER_LOGIN }}/bugget-api:${{ env.VERSION }} \
            --push \
            -f ./Bugget/Dockerfile .

          if [[ "${{ env.IS_PLAIN_VERSION }}" == "true" ]]; then
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --cache-from=type=gha \
              --cache-to=type=gha,mode=max \
              -t ${{ secrets.DOCKER_LOGIN }}/bugget-api:latest \
              --push \
              -f ./Bugget/Dockerfile .
          else
            echo "üîÅ –ü—Ä–æ–ø—É—â–µ–Ω –ø—É—à latest, —Ç–∞–∫ –∫–∞–∫ –≤–µ—Ä—Å–∏—è –Ω–µ –≤ –≤–∏–¥–µ vX.Y.Z"
          fi
